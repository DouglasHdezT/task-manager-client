{"version":3,"sources":["components/TaskList/TaskItem/TaskItem.module.css","components/TaskList/TaskList.module.css","App.module.css","components/TaskList/TaskItem/TaskItem.js","components/TaskList/AddTaksItem/AddTaskItem.js","components/TaskList/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TaskItem","active","text","toggleActiveHandler","deleteTaskHandler","updateTaskHandler","useState","editing","setEditing","bufferText","setBufferText","pClasses","classes","done","textField","FormControl","onKeyDown","e","key","value","onChange","target","className","join","style","cursor","onClick","ListGroupItem","item","FormCheck","checked","color","AddTaskItem","insertTaskHandler","setText","placeholder","TaskList","tasks","tasksComponents","map","task","_id","ListGroup","list","BASEURL","App","setTasks","fetchAll","a","url","fetch","response","ok","json","sortedTask","forEach","console","error","message","insertNewTask","body","JSON","stringify","method","headers","updateTaskText","id","toggleActiveTask","deleteTaskByID","useEffect","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e9e45ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TaskItem_item__ZUbJz\",\"done\":\"TaskItem_done__1w7fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__2xVr5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React, { useState } from 'react';\n\nimport { ListGroupItem, FormCheck, FormControl } from 'react-bootstrap';\nimport { MdEdit, MdDelete } from 'react-icons/all';\n\nimport classes from './TaskItem.module.css';\n\nconst TaskItem = ({ active, text, toggleActiveHandler, deleteTaskHandler, updateTaskHandler}) => {\n    const [editing, setEditing] = useState(false);\n    const [bufferText, setBufferText] = useState(text);\n\n    const onKeyDownHandler = (e) => { \n        if (e.key === \"Enter\" && bufferText !== \"\") { \n            setEditing(false);\n            updateTaskHandler(bufferText);\n        }\n\n        if (e.key === \"Escape\") {\n            setBufferText(\"\");\n        }\n    }\n\n    let pClasses = [];\n    if (!active) pClasses = [...pClasses, classes.done];\n\n    const textField = editing ?\n        <FormControl\n            onKeyDown={onKeyDownHandler}\n            value={bufferText}\n            onChange={({ target }) => setBufferText(target.value)} /> :\n        <p className={pClasses.join(\" \")}\n            style={{ cursor: \"pointer\" }}\n            onClick={toggleActiveHandler}> {text} </p>;\n\n    return (\n        <ListGroupItem className={classes.item}>\n            <FormCheck checked={!active} onChange={toggleActiveHandler}/>\n            { textField }\n            <MdEdit\n                onClick={()=>setEditing(!editing)}\n                style={{ cursor: \"pointer\" }} color=\"#999\" />\n            <MdDelete\n                onClick={deleteTaskHandler}\n                style={{ cursor: \"pointer\" }} color=\"#999\" />\n        </ListGroupItem>\n    );\n}\n\nexport default TaskItem;","import React, { useState } from 'react';\n\nimport { ListGroupItem, FormControl } from 'react-bootstrap';\n\nconst AddTaskItem = ({ insertTaskHandler }) => {\n    const [text, setText] = useState(\"\");\n\n    const onKeyDownHandler = (e) => { \n        if (e.key === \"Enter\" && text !== \"\") { \n            insertTaskHandler(text)\n        }\n\n        if (e.key === \"Escape\") { \n            setText(\"\"); \n        }\n    }\n    return (\n        <ListGroupItem onKeyDown={onKeyDownHandler}>\n            <FormControl\n                value={text}\n                onChange={({target})=>setText(target.value)}\n                placeholder=\"AÃ±adir una nueva tarea...\" />\n        </ListGroupItem>\n    );\n}\n\nexport default AddTaskItem;","import React from 'react';\n\nimport { ListGroup } from 'react-bootstrap';\nimport TaskItem from './TaskItem/TaskItem';\nimport AddTaskItem from './AddTaksItem/AddTaskItem';\n\nimport classes from './TaskList.module.css';\n\nconst TaskList = ({ tasks, toggleActiveHandler, insertTaskHandler, deleteTaskHandler, updateTaskHandler }) => {\n    const tasksComponents = tasks.map(task => (\n        <TaskItem\n            key={task._id}\n            deleteTaskHandler={() => deleteTaskHandler(task._id)}\n            toggleActiveHandler={() => toggleActiveHandler(task._id)}\n            updateTaskHandler={(text) => updateTaskHandler(task._id, text)}\n            active={task.active}\n            text={task.text} />\n    ));\n    \n    return (\n        <ListGroup className={classes.list}>\n            { tasksComponents }\n            <AddTaskItem\n                insertTaskHandler={ insertTaskHandler }/>\n        </ListGroup>\n    );\n}\n\nexport default TaskList;","import React, {useState, useEffect} from 'react';\n\nimport TaskList from '@internal/components/TaskList/TaskList';\n\nimport classes from './App.module.css';\n\nconst BASEURL = \"http://localhost:3500/api\";\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n\n    const fetchAll = async () => {\n        try {\n            const url = `${BASEURL}/task/`;\n            const response = await fetch(url);\n\n            if (response.ok) {\n                const tasks = await response.json();\n                let sortedTask = [];\n\n                //Ordenar por activo o inactivo\n                tasks.forEach(task => {\n                    if (task.active) {\n                        sortedTask = [task, ...sortedTask];\n                    } else {\n                        sortedTask = [...sortedTask, task];\n                    }\n                });\n\n                setTasks(sortedTask);\n            }\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    const insertNewTask = async (text) => {\n        try {\n            const url = `${BASEURL}/task/`;\n            const body = JSON.stringify({ text });\n\n            const response = await fetch(url, {\n                body,\n                method: \"POST\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n\n            if (response.ok) {\n                await fetchAll();\n            }\n            \n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    const updateTaskText = async (_id, text) => {\n        try {\n            const url = `${BASEURL}/task/`;\n            \n            const body = JSON.stringify({\n                id: _id,\n                text: text\n            });\n\n            const response = await fetch(url, {\n                body,\n                method: \"PUT\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n\n            if (response.ok) {\n                await fetchAll();\n            }\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    const toggleActiveTask = async (_id) => {\n        try {\n            const url = `${BASEURL}/task/toggle/${_id}`;\n            \n            const response = await fetch(url, {\n                method: \"PUT\"\n            });\n\n            if (response.ok) {\n                await fetchAll();\n            }\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    const deleteTaskByID = async (_id) => {\n        const url = `${BASEURL}/task/${_id}`;\n        \n        const response = await fetch(url, {\n            method: \"DELETE\"\n        });\n\n        if (response.ok) {\n            await fetchAll();\n        }\n    };\n\n    useEffect(() => {\n        fetchAll();\n    }, []);\n\n    return (\n        <div className={classes.container}>\n            <h1> Task manage App </h1>\n            <TaskList\n                deleteTaskHandler={deleteTaskByID}\n                insertTaskHandler={insertNewTask}\n                updateTaskHandler={updateTaskText}\n                toggleActiveHandler={toggleActiveTask}\n                tasks={tasks} />\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}